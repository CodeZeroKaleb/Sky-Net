module.exports = function(token, choosenPrefix) {
  const Discord = require('discord.js')
  const bot = new Discord.Client();
  const fs = require("fs")

  bot.once('ready', ready => {
    console.log ('Online!');
  });

  bot.on("message", async message => {
    const prefix = choosenPrefix;
    
    message.guild.fetchMember(message.author).then(m => {
      if (m.roles.exists("name", "Muted")) return message.delete(); //this is for muted role
    });

    if (message.author.bot || message.content.indexOf(prefix) !== 0) return;
    const args = message.content.slice(prefix.length).trim().split(/ +/g);
    const command = args.shift().toLowerCase();
    try{
      if(message.content.startsWith(prefix + 'ban')) {
        if(!message.channel.permissionsFor(message.member).hasPermission("BAN_MEMBERS") ) return message.reply("Sorry, you don't have permissions to use this! ❌");

        let member = message.mentions.members.first();
        if(!member) return message.reply("Please mention a valid member of this server");
        if(!member.bannable) return message.reply("I cannot ban this user! Do they have a higher role? Do I have ban permissions?");
    
        let reason = args.slice(1).join(' ');
        if(!reason) return message.reply("Please indicate a reason for the ban!");
        
        await member.ban(reason)
        .catch(error => message.reply(`Sorry ${message.author} I couldn't ban because of : ${error}`));
        message.reply(`${member.user.tag} has been banned by ${message.author.tag} because: ${reason}`);
      } else if (message.content.startsWith(prefix + 'kick')) {
        if(!message.channel.permissionsFor(message.member).hasPermission("KICK_MEMBERS") ) return message.reply("Sorry, you don't have permissions to use this! ❌");

        let member = message.mentions.members.first();
        if(!member) return message.reply("Please mention a valid member of this server");
        if(!member.kickable) return message.reply("I cannot kick this user! Do they have a higher role? Do I have kick permissions?");

        let reason = args.slice(1).join(' ');
        if(!reason) return message.reply("Please indicate a reason for the kick!");

        await member.kick(reason)
        .catch(error => message.reply(`Sorry ${message.author} I couldn't n't kick because of : ${error}`));
        message.reply(`${member.user.tag} has been kicked by ${message.author.tag} because: ${reason}`);
      } else if (message.content.startsWith(prefix + 'warn')) {
        if(!message.channel.permissionsFor(message.member).hasPermission("ADMINISTRATOR")) return message.reply("Sorry, you don't have permissions to use this! ❌");

        let member = message.mentions.members.first();
        if(!member) return message.reply("Please mention a valid member of this server");
    
        let reason = args.slice(1).join(' ');
        if(!reason) return message.reply("Please indicate a reason for the warn!");
        
        await member.send(`You have been warned by <@${message.author.id}> for this reason: ${reason}`)
        .catch(error => message.reply(`Sorry <@${message.author.id}> I couldn't n't warn because of : ${error}`));
        message.channel.send(`<@${member.user.id}> has been warned by <@${message.author.id}> because: ${reason}`);
      } else if (message.content.startsWith(prefix + 'mute')) {
        if(message.channel.permissionsFor(message.member).hasPermission("KICK_USERS") ) {
          const member = message.mentions.users.first()
          const muteRole = bot.guilds.get(message.guild.id).roles.find('name', 'Muted');
          if (!muteRole) return message.channel.send("I cannot find the Muted role");
      
          if(message.guild.member(member).roles.has(muteRole.id)) {
            message.guild.member(member).removeRole(muteRole)
            message.channel.send(`<@${message.mentions.users.first().id}> you have been unmuted by <@${message.author.id}>`)
          } else { 
             message.guild.member(member).addRole(muteRole)
            message.channel.send(`<@${message.mentions.users.first().id}> you have been muted by <@${message.author.id}>`)
          } 
        } else return message.reply("You don't have permissions to do that! ❌")
      } else if (message.content.startsWith(prefix + 'notify')) {
        let notifyArgs = args = message.content.split(" ")
        if(message.channel.permissionsFor(message.member).hasPermission("ADMINISTRATOR") ) {
          message.delete()
          if (message.mentions.users.first().id === message.author.id) return message.reply("Can't notify yourself!")
          var PREFIX = "u!";
          let notification = `"${message.author.tag}" notified you: ${notifyArgs.slice(2).join(' ')}`
          message.mentions.users.first().send(notification)
        } else message.channel.send('No permissions found for that sorry ❌')
      } else if (message.content.startsWith(prefix + 'lock')) {
        if(message.channel.permissionsFor(message.member).hasPermission("ADMINISTRATOR") ) {
          if(!bot.lockit) bot.lockit = [];
          let time = args.join(' ')
          let validUnlocks = ['release', 'unlock'];
          if(validUnlocks.includes(time)) {
            message.channel.overwritePermissions(message.guild.id, {
              SEND_MESSAGES: null
            }).then(() => {
              message.channel.send('Lockdown lifted.');
              clearTimeout(bot.lockit[message.channel.id])
              delete bot.lockit[message.channel.id];
            }).catch(error => {
              console.log(error)
            });
          } else {
            message.channel.overwritePermissions(message.guild.id, {
              SEND_MESSAGES: false
            }).then(() => {
              message.channel.send(`Channel locked down`)
            });
          }
        } else return message.reply("You don't have permissions to do that! ❌")
      }
    } catch (err) {
      console.log(err)
    }

  });

  bot.login(token)
}